{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst inputField = document.querySelector(\"#datetime-picker\");\nconst button = document.querySelector(\"[data-start]\");\nconst day = document.querySelector(\"[data-days]\")\nconst hour = document.querySelector(\"[data-hours]\")\nconst minute = document.querySelector(\"[data-minutes]\")\nconst second = document.querySelector(\"[data-seconds]\")\nbutton.disabled = true;\nlet userSelectedDate;\nlet intervalNumber;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      if(Date.now() > selectedDates[0].getTime()) \n      {return iziToast.warning({\n        message: 'Please choose a date in the future'\n    }),\n    button.disabled = true\n    }else{\n     button.disabled = false\n    }\n    userSelectedDate = selectedDates[0].getTime()\n    },\n  };\n\n  flatpickr(inputField, options);\n  button.addEventListener(\"click\", startTime);\n\nfunction startTime(){\n  inputField.disabled = true\n  button.disabled = true\n  intervalNumber = setInterval(() =>\n  {const diff = userSelectedDate - Date.now();\n    if (diff < 1000) stopTimer();\n    updateTimer(convertMs(diff))\n}, 1000)}\n\nfunction stopTimer(){\n  clearInterval(intervalNumber)\n}\n\nfunction addZero(num) {\n    return num.toString().padStart(2, '0');\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  day.innerHTML = addZero(days);\n  hour.innerHTML = addZero(hours);\n  minute.innerHTML = addZero(minutes);\n  second.innerHTML = addZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n"],"names":["inputField","button","day","hour","minute","second","userSelectedDate","intervalNumber","options","selectedDates","iziToast","flatpickr","startTime","diff","stopTimer","updateTimer","convertMs","addZero","num","days","hours","minutes","seconds","ms"],"mappings":"0IAUA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAM,SAAS,cAAc,aAAa,EAC1CC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAS,SAAS,cAAc,gBAAgB,EACtDJ,EAAO,SAAW,GAClB,IAAIK,EACAC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAG,KAAK,IAAK,EAAGA,EAAc,CAAC,EAAE,QAAS,EACzC,OAAOC,EAAS,QAAQ,CACvB,QAAS,oCACjB,CAAK,EACDT,EAAO,SAAW,GAEjBA,EAAO,SAAW,GAEnBK,EAAmBG,EAAc,CAAC,EAAE,QAAS,CAC5C,CACL,EAEEE,EAAUX,EAAYQ,CAAO,EAC7BP,EAAO,iBAAiB,QAASW,CAAS,EAE5C,SAASA,GAAW,CAClBZ,EAAW,SAAW,GACtBC,EAAO,SAAW,GAClBM,EAAiB,YAAY,IAC7B,CAAC,MAAMM,EAAOP,EAAmB,KAAK,IAAG,EACnCO,EAAO,KAAMC,IACjBC,EAAYC,EAAUH,CAAI,CAAC,CAC/B,EAAG,GAAI,CAAC,CAER,SAASC,GAAW,CAClB,cAAcP,CAAc,CAC9B,CAEA,SAASU,EAAQC,EAAK,CAClB,OAAOA,EAAI,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASH,EAAY,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDpB,EAAI,UAAYe,EAAQE,CAAI,EAC5BhB,EAAK,UAAYc,EAAQG,CAAK,EAC9BhB,EAAO,UAAYa,EAAQI,CAAO,EAClChB,EAAO,UAAYY,EAAQK,CAAO,CACpC,CAEA,SAASN,EAAUO,EAAI,CAMrB,MAAMJ,EAAO,KAAK,MAAMI,EAAK,KAAG,EAC1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EACpCF,EAAU,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,EACjDD,EAAU,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}